generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id           String      @id @default(uuid())
  email        String      @unique
  passwordHash String
  displayName  String
  isActive     Boolean     @default(true)
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  auditLogs    AuditLog[]
  StockMove    StockMove[]
}

model Warehouse {
  id         String      @id @default(uuid())
  code       String      @unique
  name       String
  address    String?
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  stockMoves StockMove[]
}

model Product {
  id         String      @id @default(uuid())
  name       String
  unitCode   String      @default("c√°i")
  costPrice  Decimal?    @db.Decimal(18, 2)
  salePrice  Decimal?    @db.Decimal(18, 2)
  isActive   Boolean     @default(true)
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  stockMoves StockMove[]

  @@index([name])
}

model StockMove {
  id          String     @id @default(uuid())
  productId   String
  warehouseId String?
  qtyDelta    Decimal    @db.Decimal(18, 3)
  reason      MoveReason
  note        String?
  createdById String?
  createdAt   DateTime   @default(now())

  product   Product    @relation(fields: [productId], references: [id], onDelete: Cascade)
  warehouse Warehouse? @relation(fields: [warehouseId], references: [id])
  createdBy User?      @relation(fields: [createdById], references: [id])

  @@index([productId, warehouseId])
  @@index([createdAt])
}

model AuditLog {
  id        String   @id @default(uuid())
  userId    String?
  action    String
  entity    String
  entityId  String
  diff      Json?
  createdAt DateTime @default(now())
  user      User?    @relation(fields: [userId], references: [id])

  @@index([entity, entityId])
}

enum MoveReason {
  IN
  OUT
  ADJUST_POS
  ADJUST_NEG
}
